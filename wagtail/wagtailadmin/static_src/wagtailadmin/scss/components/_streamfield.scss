ul.sequence {
    @include clearfix;
    position: relative;
}

li.sequence-member {
    @include clearfix;
    position: relative;
    border: solid $color-grey-4;
    border-width: 1px 0;

    &:first-child {
        border-top: 0;
    }

    // Note this inherits .oject-help from page-editor.scss
    .object-help {
        display: block;
        float: none;
        font-style: italic;
        margin: 0;
        max-width: 650px;
        opacity: 1;
        padding-left: 0;
        position: relative;
        width: 100%;

        &::before {
            display: none;
        }
        @media screen and (max-width: $breakpoint-mobile) {
            margin: -20px 0 30px;
            padding-left: 0;
        }
    }

    .struct-block .fields {
        width: 100%;
        padding-left: 0;
        padding-right: 0;
    }

    .struct-block label {
        display: block;
        float: none;
        text-transform: uppercase;
        width: 100%;
    }

    .struct-block .sequence-container {
        width: 100%;
        padding-left: 0;
        padding-right: 0;

        .sequence-member-inner {
            padding: 20px 30px 50px 20px;
        }
    }

    // Copied from page-editor.scss
    .struct-block li.required > label:after {
        content: '*';
        color: $color-red;
        font-weight: bold;
        display: inline-block;
        margin-left: 0.5em;
        line-height: 1em;
        font-size: 13px;
    }

    // The top level sequence doesn't have a sequnce-member-inner. This block is basically for things that should only affect inner blocks
    .sequence-member-inner {
        @include clearfix;
        position: relative;
        padding: 20px 30px 50px 20px;

        .sequence-member {
            // Second level nested Streamfield
            border: 1px solid $color-teal;
            border-bottom: 1px transparent;

            &:first-child {
                border-top-right-radius: 3px;
                border-top-left-radius: 3px;
            }

            &:last-child {
                border-bottom: 1px solid $color-teal;
                border-bottom-right-radius: 3px;
                border-bottom-left-radius: 3px;
            }

            .sequence-member-inner .sequence-member {
                // Third level nested Streamfield
                border-color: $color-grey-3;
            }

            .sequence-member-inner .sequence-member .sequence-member-inner .sequence-member {
                // Fourth level nested Streamfield
                border-color: $color-teal;
            }
        }

        // sequences within sequences, such as a ListBlock within StructBlock
        > .sequence .sequence-inner {
            width: 100%;
        }

        .sequence-type-list .sequence-container-inner {
            width: 100%;
        }
    }

    .fields > li {
        position: relative;

        &:last-child {
            padding-bottom: 0;
        }
    }
}

.sequence-member-inner > .widget-admin_image_chooser {
    .field-content {
        display: block;
        float: none;
        width: 100%;
        max-width: 500px;
    }

    .chooser {
        .chosen {
            padding: 0;
        }

        .unchosen {
            &:before {
                float: none;
                font-size: 4em;
                margin: 0;
            }
        }

        .preview-image {
            float: none;
            margin: 0 5px;
        }
    }

    .actions li {
        display: inline-block;
        float: none;
    }
}


// This horridly specific selector ensures text inputs, rich text fields and textareas
// that are direct children of highest level sequence should be borderless and full-width
// Which is almost a terrible idea @TODO
.block_field > .field-content > .input > .sequence-container > .sequence-container-inner > .sequence > .sequence-member > .sequence-member-inner {
    > .widget-text_input input,
    > .widget-hallo_rich_text_area .richtext,
    > .widget-textarea textarea {
        border: 0;
        padding: 0;
        background-color: transparent;
        max-width: 1024px;
    }
}

// Controls for ordering and deletion of items in a sequence
.sequence-controls {
    @include transition(opacity 0.2s ease);
    height: 30px;
    overflow: visible;
    right: 0;
    width: 100%;
    z-index: 1;

    h3 {
        display: inline-block;
        font-size: 0.8rem;
        line-height: 1.8rem;
        padding: 0 20px;

        label {
            float: none;
            font-weight: bold;
            margin: 0;
            padding: 0;
            text-transform: uppercase;
            width: auto;
        }
    }

    // overrides form.scss
    button.icon.text-replace {
        background-color: transparent;
        border: 0;
        color: $color-teal;
        padding: 0 20px;
        width: 1.8rem;
        height: 1.8rem;
        // We float right to ensure control consistency on listblocks
        float: right;

        &::before {
            line-height: 1.3em;
            font-size: 0.9rem;
        }

        &:hover {
            color: $color-teal-dark;
        }

        &.icon-bin {
            &:hover {
                color: $color-red;
            }
        }
    }

    // .buttons only exists for menus in stream_member.html
    .button-group {
        float: right;
        padding: 8px 24px;
    }

    .disabled {
        display: none;
    }
}

// list controls are slightly different as they require closer proximity to their associated fields
.list-controls {
    border-radius: 0;
    background: transparent;
    top: 1.5em;
    border: 0;
    padding: 0;
    overflow: hidden;
    height: auto;
}

.sequence-type-list .object-help {
    margin-top: 1.5em;
}

// Menu of other blocks to be added at each position
.stream-menu {
    @include transition(all 0.2s ease);
    position: relative;
    background-color: $color-grey-4;
    opacity: 1;

    .toggle {
        @include transition(color 0.2s ease);
        border-radius: 50px;
        position: absolute;
        top: -0.5em;
        left: 16px;
        right: 0;
        margin: 0;
        cursor: pointer;
        font-size: 1.7em;
        width: 1em;
        height: 1em;
        display: block;
        z-index: 1;
        color: $color-grey-1;
        background-color: $color-white;
        outline: none;

        span {
            @include visuallyhidden();
        }

        &:before {
            transform: rotate(-45deg);
            position: absolute;
            font-family: wagtail;
            content: 'B';
            line-height: 1em;
            text-align: center;
        }
    }

    .stream-menu-inner {
        transform: translate3d(0, 0, 0);
        max-width: 50em;
        margin: 0;
        overflow: hidden;
    }

    ul {
        @include transition(all 0.2s ease);
        @include clearfix;
        transform: translate3d(0, 0, 0) scale(1);
        visibility: visible;
        opacity: 1;
        padding: 1em 2em 1em;
        display: flex;
        flex-flow: row wrap;
        overflow: hidden;
    }

    li {
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        float: none;
        width: 8em;
        padding: 1em 0;
        text-align: left;
        margin: 1em;
    }

    h3 {
        padding: 0.5em 0;
        margin: 2em 3em 0;
        border-bottom: 1px solid $color-menu-text;
        padding-bottom: 1em;
    }

    button {
        @include transition(all 0.4s ease);
        background-color: transparent;
        border: 0;
        color: $color-grey-1;
        height: auto;
        display: block;
        width: auto;
        padding: 0;
        outline: $color-teal;
        overflow: visible;

        span {
            text-transform: uppercase;
            white-space: pre-wrap;
            width: 100%;
            display: inline;
            overflow: hidden;
            padding: 0.5em 0;
            box-sizing: border-box;
            line-height: 0;
            text-align: left;
            margin: 0 5px 5px;
        }

        &::before {
            display: block;
            font-family: wagtail;
            font-size: 1.2em;
            width: 2em;
            height: 2em;
            line-height: 2em;
            text-align: center;
            border: 1px solid $color-grey-3;
            color: $color-grey-2;
            border-radius: 8px;
            margin: 0 auto 12px;
        }

        &:hover,
        &:focus {
            background-color: transparent;
            color: inherit;

            span {
                color: $color-black;
            }

            &::before {
                background-color: $color-teal;
                color: $color-white;
                border-color: $color-grey-4;
            }
        }
    }

    &.stream-menu-closed {
        box-shadow: none;

        .stream-menu-inner ul {
            transform: scale(0.9);
            opacity: 0;
        }

        .toggle {
            color: $color-grey-3;
            background-color: $color-white;

            &:before {
                transform: rotate(0deg);
            }

            &:focus {
                color: $color-teal;
            }
        }

        &:hover {
            border-top-color: $color-teal;

            .toggle {
                color: $color-teal;
            }
        }
    }

    @media screen and (min-width: $breakpoint-mobile) {
        li {
            &:nth-child(4n+1) {
                clear: none;
            }

            &:nth-child(6n+1) {
                clear: left;
            }
        }
    }
}

.sequence-member .stream-menu {
    margin: auto auto 0;
}

.sequence-member:hover {
    .sequence-controls {
        visibility: visible;
        opacity: 1;
    }

    .stream-menu {
        visibility: visible;
        opacity: 1;
    }
}

