/**
 * A simplified set of smoke tests for the project template generated by `wagtail start`.
 */

jest.setTimeout(30000);

describe('Admin', () => {
  beforeAll(async () => {
    await page.goto(`${TEST_ORIGIN}/admin/`);
  });

  it('has the right heading', async () => {
    const pageHeader = await page.$('h1');
    const pageHeaderValue = await pageHeader.evaluate((el) => el.textContent);
    expect(pageHeaderValue).toContain('mysite');
  });
});

describe('Listing', () => {
  beforeAll(async () => {
    await page.goto(`${TEST_ORIGIN}/admin/pages/3/`);
  });

  it('has the right heading', async () => {
    expect(await page.title()).toContain('Exploring: Home - Wagtail');
  });
});

describe('Editor', () => {
  const globalEditorExcludes =
    '.skiplink, .sidebar__collapse-toggle, #wagtail-sidebar, li[aria-controls^="tab-"]';
  beforeAll(async () => {
    await page.goto(`${TEST_ORIGIN}/admin/pages/add/home/homepage/1/`);
  });

  it('has the right heading', async () => {
    const pageHeader = await page.$('h1');
    const pageHeaderValue = await pageHeader.evaluate((el) => el.textContent);
    expect(pageHeaderValue).toContain('New: Home page');
  });

  it('axe', async () => {
    await expect(page).toPassAxeTests({
      exclude: `${globalEditorExcludes}, [aria-describedby^="placeholder-"]`,
    });
  });
});

describe('Frontend', () => {
  beforeAll(async () => {
    await page.goto(`${TEST_ORIGIN}`);
  });

  it('has the right heading', async () => {
    const pageHeader = await page.$('h1');
    const pageHeaderValue = await pageHeader.evaluate((el) => el.textContent);
    expect(pageHeaderValue).toContain('Welcome to your new Wagtail site!');
  });
});
